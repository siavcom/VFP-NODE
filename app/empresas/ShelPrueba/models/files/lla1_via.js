module.exports = function(sequelize, DataTypes) {
  return sequelize.define('lla1_via', {
'via_via': {type: DataTypes.INTEGER,allowNull: false,defaultValue: '0',comment: 'NUMERO DE VIAJE' },'rut_rut': {type: DataTypes.SMALLINT,allowNull: false,defaultValue: '0',comment: 'RUTA A SURTIR' },'fec_via': {type: DataTypes.DATE,allowNull: false,comment: 'FECHA TIEMPO DEL VIAJE SALIDA' },'fll_via': {type: DataTypes.DATE,allowNull: false,comment: 'FECHA TIEMPO DE LLEGADA  DEL VEHICULO (INCLUYE hh:mm:ss)' },'cod_nom': {type: DataTypes.CHAR(12),allowNull: false,defaultValue: ' ',comment: 'CODIGO DEL PROVEEDOR (TRANSPORTISTA' },'cpo_via': {type: DataTypes.CHAR(20),allowNull: false,defaultValue: ' ',comment: 'CARTA PORTE' },'ttr_via': {type: DataTypes.CHAR(1),allowNull: false,defaultValue: ' ',comment: 'TIPO DE VIAJE P =PROPIO;E=EXTERNO' },'noc_via': {type: DataTypes.CHAR(50),allowNull: false,defaultValue: ' ',comment: 'NOMBRE DEL CONDUCTOR EN CASO DE SER EXTERNO EL VIAJE' },'lic_via': {type: DataTypes.CHAR(20),allowNull: false,defaultValue: ' ',comment: 'LICENCIA DEL CONDUCTOR' },'tb1_tba': {type: DataTypes.CHAR(12),allowNull: false,defaultValue: ' ',comment: 'CODIGO DEL TRABAJADOR (CHOFER)' },'tb2_tba': {type: DataTypes.CHAR(12),allowNull: false,defaultValue: ' ',comment: 'CHOFER 2' },'tb3_tba': {type: DataTypes.CHAR(12),allowNull: false,defaultValue: ' ',comment: 'CHOFER 3' },'ama_via': {type: DataTypes.CHAR(50),allowNull: false,defaultValue: ' ',comment: 'ASEGURADORA DE MEDIO AMBIENTE' },'pma_via': {type: DataTypes.CHAR(30),allowNull: false,defaultValue: ' ',comment: 'POLIZA DEL MEDIO AMBIENTE' },'aca_via': {type: DataTypes.CHAR(50),allowNull: false,defaultValue: ' ',comment: 'ASEGURADORA DE LA CARGA TRANSPORTADA' },'pca_via': {type: DataTypes.CHAR(30),allowNull: false,defaultValue: ' ',comment: 'POLIZA DE LA ASEGURADORA DE LA CARGA TRANSPORTADA' },'ipc_via': {type: DataTypes.DECIMAL(16,5),allowNull: false,defaultValue: '0',comment: 'IMPORTE POLIZA DE LA CARGA' },'est_via': {type: DataTypes.CHAR(1),allowNull: false,defaultValue: ' ',comment: 'ESTATUS DEL VIAJE P=PROCESO DE CARGA ; T=Transito; D=DETENIDO; C=CANCELADO; F=Finalzado; R=Robo' },'oes_via': {type: DataTypes.CHAR(40),allowNull: false,defaultValue: ' ',comment: 'OBSERVACIONES DE ESTATUS' },'ob1_via': {type: DataTypes.CHAR(40),allowNull: false,defaultValue: ' ',comment: 'OBSERVCION 1 DEL VIAJE' },'ob2_via': {type: DataTypes.CHAR(40),allowNull: false,defaultValue: ' ',comment: 'OBSERVACION 2 DEL VIAJE' },'dis_via': {type: DataTypes.SMALLINT,allowNull: false,defaultValue: '0',comment: 'DISTANCIA A RECORRER' },'rfo_via': {type: DataTypes.CHAR(13),allowNull: false,defaultValue: ' ',comment: 'RFC ORIGEN' },'dio_via': {type: DataTypes.SMALLINT,allowNull: false,comment: 'DIRECCION ORIGEN' },'rfd_via': {type: DataTypes.CHAR(13),allowNull: false,defaultValue: ' ',comment: 'RFC DESTINO' },'did_via': {type: DataTypes.SMALLINT,allowNull: false,comment: 'DIRECCION DESTINO' },'tie_uac': {field: 'TIE_UAC',type: DataTypes.DATE,comment: 'FECHA DE LA ULTIMA ACTUALIZACION' },'tie_cre': {field: 'TIE_CRE',type: DataTypes.DATE,comment: 'TIEMPO DE CREACION' },'usu_usu': {field: 'USU_USU',type: DataTypes.SMALLINT,comment: 'USUARIO' },'usu_cre': {field: 'USU_CRE',type: DataTypes.SMALLINT,comment: 'USUARIO CREADOR' },'timestamp': {type: DataTypes.BLOB('tiny'),allowNull: true,comment: 'MARCA ULTIMA ACTUALIZACION' },'key_pri': {type: DataTypes.INTEGER,allowNull: false,defaultValue: '0',comment: 'LLAVE PRIMARIA PARA LA ACTUALIZACION DE VISTAS', primaryKey: true },createdAt: {field: 'tie_cre',type: DataTypes.DATE,},
updatedAt: {field: 'tie_uac',type: DataTypes.DATE,} 
  }, { tableName: 'man_comevia'});
};
